[{"D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\index.js":"1","D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\App.js":"2","D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\serviceWorker.js":"3","D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\sagas\\sagas.js":"4","D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\reducers\\index.js":"5","D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\components\\Login.js":"6","D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\components\\Posts.js":"7","D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\components\\Register.js":"8","D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\layouts\\Routing.js":"9","D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\sagas\\api.js":"10","D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\reducers\\userReducer.js":"11","D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\reducers\\postsReducer.js":"12","D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\constants\\index.js":"13","D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\layouts\\PublicMasterPage.js":"14","D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\layouts\\MasterPage.js":"15"},{"size":663,"mtime":1613645775000,"results":"16","hashOfConfig":"17"},{"size":1353,"mtime":1613645775000,"results":"18","hashOfConfig":"17"},{"size":5086,"mtime":1613645775000,"results":"19","hashOfConfig":"17"},{"size":3772,"mtime":1613645775000,"results":"20","hashOfConfig":"17"},{"size":251,"mtime":1613645775000,"results":"21","hashOfConfig":"17"},{"size":1946,"mtime":1613645775000,"results":"22","hashOfConfig":"17"},{"size":10305,"mtime":1613645775000,"results":"23","hashOfConfig":"17"},{"size":3512,"mtime":1613645775000,"results":"24","hashOfConfig":"17"},{"size":972,"mtime":1613645775000,"results":"25","hashOfConfig":"17"},{"size":2094,"mtime":1613645775000,"results":"26","hashOfConfig":"17"},{"size":1836,"mtime":1613645775000,"results":"27","hashOfConfig":"17"},{"size":1412,"mtime":1613645775000,"results":"28","hashOfConfig":"17"},{"size":334,"mtime":1613645775000,"results":"29","hashOfConfig":"17"},{"size":262,"mtime":1613645775000,"results":"30","hashOfConfig":"17"},{"size":1459,"mtime":1613645775000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"r2h4eh",{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"35"},"D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\index.js",["71","72"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport promise from \"redux-promise\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport reducers from \"./reducers\";\nimport sagas from \"./sagas/sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(sagas);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n",["73","74","75"],"D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\App.js",["76","77","78","79"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { PostDetail, PostCreate, PostEdit, PostDelete, Posts, Home } from \"./components/Posts\";\nimport { Login } from \"./components/Login\";\nimport { Register } from \"./components/Register\";\nimport { PrivateRoute,PublicRoute } from \"./layouts/Routing\";\n\n\n\nconst App = () => {\n\n  const userContext = useSelector(state => {\n    return state.userContext;\n  });\n\n  return (\n    <Router>\n     \n              <Switch>\n                <PrivateRoute path=\"/post-detail/:id\" component={PostDetail}></PrivateRoute>\n                <PrivateRoute path=\"/post-create\" component={PostCreate}></PrivateRoute>\n                <PrivateRoute path=\"/post-edit/:id\" component={PostEdit}></PrivateRoute>\n                <PrivateRoute path=\"/post-delete/:id\" component={PostDelete}></PrivateRoute>\n                <PrivateRoute path=\"/posts\" component={Posts}></PrivateRoute>\n                <PublicRoute path=\"/login\" component={Login}></PublicRoute>\n                <PublicRoute path=\"/register\" component={Register}></PublicRoute>\n                <PublicRoute path=\"/\" component={Home}></PublicRoute>\n\n\n              </Switch>\n        \n    </Router>\n  );\n}\n\nexport default App;","D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\serviceWorker.js",[],"D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\sagas\\sagas.js",[],"D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\reducers\\index.js",[],"D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\components\\Login.js",["80","81","82","83","84","85","86","87","88"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Constants } from \"../constants\";\n\nexport const Login = () => {\n    let history = useHistory();\n    let dispatch = useDispatch();\n    const { register, handleSubmit, watch, errors } = useForm();\n\n    let submitData = (data) => {\n        dispatch({\n            type: Constants.LOGIN_REQUEST, payload: data\n        })\n        history.push('/');\n    }\n\n    const onSubmit = data => {\n        submitData(data);\n    };\n\n    const userContext = useSelector(state => {\n        return state.userContext;\n    });\n\n    return (userContext.isAuthenticated) ? <Redirect to={{ pathname: '/' }} /> :\n        <>\n            <div className=\"col-md-6 col-md-offset-3\">\n                <h2>Login</h2>\n                <form name=\"form\" onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\">Username</label>\n                        <input type=\"text\" className=\"form-control\" name=\"username\" ref={register({ required: true })} />\n                        <span>{errors.username && 'Username is required'}</span>\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" className=\"form-control\" name=\"password\" ref={register({ required: true })} />\n                        <span>{errors.password && 'Password is required'}</span>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        </>;\n};","D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\components\\Posts.js",["89","90","91","92","93","94","95","96","97","98","99","100","101"],"import React, { useState, useEffect } from 'react';\n//import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link, useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport const Home = () => { return (<h2>Hello. You are in Home</h2>) };\n\nexport const PostCreate = () => {\n  let history = useHistory();\n  let dispatch = useDispatch();\n  const { register, handleSubmit, watch, errors } = useForm();\n\n  const [location, setLocation] = useState({});\n\n  function success(position) {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n    //location = { latitude, longitude };  \n    setLocation({ latitude, longitude });\n  }\n\n  function error() {\n    console.error('Unable to retrieve your location');\n  }\n\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(success, error);\n  }\n\n  let saveData = (data) => {\n    dispatch({\n      type: \"ADD_POST\", payload: data\n    })\n\n    history.push('/posts');\n  }\n\n  const onSubmit = data => {\n    let payload = { ...data, lat: location.latitude.toString(), long: location.longitude.toString() };\n    saveData(payload);\n  };\n\n  return (\n    <>\n      <h2>Create new Post</h2>\n      <h4>Location: {location.latitude}, {location.longitude}</h4>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-group input-group\">\n          <input type=\"text\" placeholder=\"Title\" name=\"title\" ref={register({ required: true })} className=\"form-control\" />\n          <span>{errors.title && 'Title is required'}</span>\n        </div>\n        <div className=\"form-group input-group\">\n          <input type=\"text\" placeholder=\"Summary\" name=\"emText\" ref={register({ required: true, maxLength: 100 })} className=\"form-control\" />\n        </div>\n        <div className=\"form-group input-group\">\n          <textarea name=\"articleText\" ref={register({ required: true })} className=\"form-control\" />\n        </div>\n        <div className=\"form-group input-group\">\n          <input type=\"url\" placeholder=\"Image URL\" name=\"imgUrl\" ref={register({ required: true })} className=\"form-control\" />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary btn-block\" />\n      </form>\n    </>\n  )\n};\n\nexport const PostEdit = (props) => {\n  let history = useHistory();\n  const { register, handleSubmit, watch, errors } = useForm();\n  let { id } = useParams();\n  let dispatch = useDispatch();\n\n  const [location, setLocation] = useState({});\n\n  function success(position) {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n    //location = { latitude, longitude };  \n    setLocation({ latitude, longitude });\n  }\n\n  function error() {\n    console.error('Unable to retrieve your location');\n  }\n\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(success, error);\n  }\n\n  let fetchData = (id) => {\n    dispatch({ type: \"FETCH_POST_DETAIL\", payload: id });\n  }\n\n  useEffect(() => {\n    fetchData(id);\n  }, [id])\n\n  const post = useSelector(state => {\n    return state.posts.selectedPost;\n  });\n\n  let updateData = (data) => {\n    const payload = { ...data, id, lat: location.latitude.toString(), long: location.longitude.toString() };\n    dispatch({ type: \"EDIT_POST\", payload: payload });\n    history.push('/posts');\n  }\n\n  const onSubmit = data => {\n    updateData(data);\n  };\n\n  return (\n    <>\n      <h2>Update new Post</h2>\n      <h4>Location: {location.latitude}, {location.longitude}</h4>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-group input-group\">\n          <input type=\"text\" placeholder=\"Title\" name=\"title\" defaultValue={post.title} ref={register({ required: true })} className=\"form-control\" />\n          <span>{errors.title && 'Title is required'}</span>\n        </div>\n        <div className=\"form-group input-group\">\n          <input type=\"text\" placeholder=\"Summary\" name=\"emText\" defaultValue={post.emText} ref={register({ required: true, maxLength: 100 })} className=\"form-control\" />\n        </div>\n        <div className=\"form-group input-group\">\n          <textarea name=\"articleText\" defaultValue={post.articleText} ref={register({ required: true })} className=\"form-control\" />\n        </div>\n        <div className=\"form-group input-group\">\n          <input type=\"url\" placeholder=\"Image URL\" name=\"imgUrl\" defaultValue={post.imgUrl} ref={register({ required: true })} className=\"form-control\" />\n        </div>\n\n        <input type=\"submit\" className=\"btn btn-primary btn-block\" />\n      </form>\n    </>\n  )\n};\n\nexport const PostDelete = (props) => {\n  const { register, handleSubmit, watch, errors } = useForm();\n  let { id } = useParams();\n  let history = useHistory();\n  let dispatch = useDispatch();\n\n  let fetchData = (id) => {\n    dispatch({ type: \"FETCH_POST_DETAIL\", payload: id });\n  }\n\n  useEffect(() => {\n    fetchData(id);\n  }, [id])\n\n  const post = useSelector(state => {\n    return state.posts.selectedPost;\n  });\n\n\n  let deleteData = () => {\n    dispatch({ type: \"DELETE_POST\", payload: id });\n    history.push('/posts');\n  }\n\n  const onSubmit = data => {\n    deleteData();\n  };\n\n  return (\n    <>\n      <h2>Delete Post</h2>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h2>{post.title}</h2>\n        <img src={post.imgUrl} style={{ height: \"50px\", width: \"50px\" }} alt=\"post img\" className=\"pull-left thumb margin10 img-thumbnail\"></img>\n        <article><p>{post.articleText}</p></article>\n        <input type=\"submit\" className=\"btn btn-primary btn-block\" value=\"Delete\" />\n      </form>\n    </>\n  )\n};\n\nexport const PostSummary = (post) => {\n  return (\n    <div align=\"left\" className=\"col-md-10 blogShort\" id={post.id}>\n      <h3>{post.title}</h3>\n      <img src={post.imgUrl} style={{ height: \"50px\", width: \"50px\" }} alt=\"post img\" className=\"pull-left thumb margin10 img-thumbnail\"></img>\n      <p>{post.emText}</p>\n      <Link to={location => `/post-detail/${post.id}`}>Detail</Link> &nbsp;\n      <Link to={location => `/post-edit/${post.id}`}>Edit</Link> &nbsp;\n      <Link to={location => `/post-delete/${post.id}`}>Delete</Link> &nbsp;\n    </div>\n  )\n}\n\nexport const Comments = (props) => {\n\n  let { id } = useParams();\n  let dispatch = useDispatch();\n\n  const comments = useSelector(state => {\n    return state.posts.selectedComments;\n  });\n\n  let fetchData = () => {\n    dispatch({\n      type: \"FETCH_COMMENTS\", payload: id,\n    })\n  }\n\n  useEffect(() => {\n    fetchData(id);\n  }, [])\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-12\">Comments count: {comments.length}</div>\n          <div className=\"col-sm-12\">\n            {\n              comments.map(comment => {\n                let date = comment.date;\n                if (date) {\n                  let d = new Date(date.toString());\n                  date = d.toDateString();\n                }\n                else date = 'No Date';\n\n                return (\n                  <>\n                    <div className=\"panel panel-default\" key={comment.id}>\n                      <div className=\"panel-body\">\n                        {comment.body} [{date}]\n                      </div>\n                    </div>\n                  </>\n                );\n              }\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  )\n};\n\nexport const CommentCreate = () => {\n  let history = useHistory();\n  let dispatch = useDispatch();\n  const { register, handleSubmit, watch, errors } = useForm();\n\n  let { id } = useParams();\n\n  let saveData = (data) => {\n\n    let comment = { body: data.title, date: new Date() };\n\n    dispatch({\n      type: \"ADD_COMMENT\", payload: { postId: id, data: comment }\n    })\n\n    history.goBack();\n  }\n\n\n\n  const onSubmit = data => {\n    saveData(data);\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n\n        <div className=\"col-md-6\">\n          <div className=\"widget-area no-padding blank\">\n            <div className=\"status-upload\">\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <input type=\"text\" placeholder=\"Write your comment here\" name=\"title\" ref={register({ required: true })} className=\"form-control\" />\n                <input type=\"submit\" className=\"btn btn-primary btn-block\" />\n              </form>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    </>\n  )\n};\n\nexport const PostDetail = (props) => {\n\n  let { id } = useParams();\n\n  let dispatch = useDispatch();\n\n  let fetchData = (id) => {\n    dispatch({ type: \"FETCH_POST_DETAIL\", payload: id });\n  }\n\n  useEffect(() => {\n    fetchData(id);\n  }, [])\n\n  const post = useSelector(state => {\n    return state.posts.selectedPost;\n  });\n\n  let match = useRouteMatch();\n\n  return (\n    <>\n      <div align=\"left\" className=\"col-md-10 blogShort\" id={id}>\n        <h2>{post.title}</h2>\n        <img src={post.imgUrl} style={{ height: \"50px\", width: \"50px\" }} alt=\"post img\" className=\"pull-left thumb margin10 img-thumbnail\"></img>\n        <article><p>{post.articleText}</p></article>\n        <a className=\"btn btn-blog pull-right marginBottom10\" href={post.readMoreUrl}>READ MORE</a>\n      </div>\n      <div>\n        <h4>Comments</h4>\n        <Link className=\"btn btn-blog pull-right\" to={`${match.url}/comments`}>Show comments</Link> &nbsp;\n        <Link className=\"btn btn-blog pull-right\" to={`${match.url}/add-comment`}>Add comment</Link>\n        <Switch>\n          <Route path={`${match.path}/comments`} component={Comments}></Route>\n          <Route path={`${match.path}/add-comment`} component={CommentCreate}></Route>\n        </Switch>\n      </div>\n    </>\n  )\n};\n\nexport const Posts = () => {\n  let dispatch = useDispatch();\n\n  const posts = useSelector(state => {\n    return state.posts.postList;\n  });\n\n  let fetchData = () => {\n    dispatch({ type: \"FETCH_POSTS\" });\n    dispatch({ type: \"CLEAR_SELECTION\" });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div id=\"blog\" className=\"row\">\n        {\n          posts.map(p => <PostSummary {...p} key={p.id} />)\n        }\n        <div className=\"col-md-12 gap10\"></div>\n      </div>\n    </div>\n  )\n}","D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\components\\Register.js",["102","103","104","105","106","107","108","109","110","111"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Constants } from \"../constants\";\n\nexport const Register = () => {\n    let history = useHistory();\n    let dispatch = useDispatch();\n    const { register, handleSubmit, watch, errors, setError } = useForm();\n\n    let submitData = (data) => {\n        dispatch({\n            type: Constants.REGISTER_REQUEST, payload: data\n        });\n    }\n\n    const onSubmit = data => {\n        if (data.password != data.confirmpassword) {\n            setError(\"password\", \"notMatch\", \"Password and Confirm Password are mismatched\");\n            return;\n        }\n\n        submitData(data);\n    };\n\n    const userContext = useSelector(state => {\n        return state.userContext;\n    });\n\n    let shouldRedirect = userContext.isAuthenticated || userContext.isRegistered;\n    if (userContext.isRegistered) {\n        history.push('/');\n    }\n\n    if (!userContext.isRegistered && userContext.error) {\n        console.log(userContext.error);\n    }\n\n    return (shouldRedirect) ? <Redirect to={{ pathname: '/' }} /> :\n        <>\n            <div className=\"col-md-6 col-md-offset-3\">\n                <h2>Login</h2>\n                {userContext.error &&\n                    <div className=\"alert alert-danger  alert-dismissible fade show\" role=\"alert\">\n                        {userContext.error.message}\n                        <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                }\n                <form name=\"form\" onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"text\" className=\"form-control\" name=\"email\" ref={register({ required: true })} />\n                        <span>{errors.email && 'Email is required'}</span>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"phone\">Phone</label>\n                        <input type=\"text\" className=\"form-control\" name=\"phone\" ref={register({ required: true })} />\n                        <span>{errors.phone && 'Phone is required'}</span>\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" className=\"form-control\" name=\"password\" ref={register({ required: true })} />\n                        <span>{errors.password && <p>{errors.password.message}</p>}</span>\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor=\"confirmpassword\">Confirm password</label>\n                        <input type=\"password\" className=\"form-control\" name=\"confirmpassword\" ref={register({ required: true })} />\n                        <span>{errors.confirmpassword && 'Confirm password is required'}</span>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        </>;\n};","D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\layouts\\Routing.js",["112","113","114","115","116","117","118"],"import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { MasterPage } from './MasterPage';\nimport PublicMasterPage from './PublicMasterPage';\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n\n    const userContext = useSelector(state => {\n      return state.userContext;\n    });\n  \n    return (\n      <Route {...rest} render={props => {\n        return (userContext.isAuthenticated)\n          ? <MasterPage><Component {...props} /></MasterPage>\n          : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />;\n      }} />\n    )\n  }\n  \n  \n  export const  PublicRoute=({ component: Component, ...rest })=> {\n    return (\n      <Route {...rest} render={props => {\n        return ( <PublicMasterPage><Component {...props} /></PublicMasterPage>)\n        }}/>\n    )\n  }\n  ","D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\sagas\\api.js",[],"D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\reducers\\userReducer.js",[],"D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\reducers\\postsReducer.js",[],"D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\constants\\index.js",[],"D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\layouts\\PublicMasterPage.js",[],["119","120","121"],"D:\\React\\ApiJwtBasic-master\\ApiJwtBasic-master\\ClientApp\\src\\layouts\\MasterPage.js",["122","123"],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Constants } from \"../constants\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const MasterPage=({ children }) =>{\n    return (\n        <div className=\"flex flex-col items-strech\">\n            <h1>this is header</h1>\n            <Navigation/>\n            <main className=\"w-full bg-blue-300 text-center\">\n                {children}\n            </main>\n            <footer className=\"w-full bg-blue-600 text-center\">\n               <h1> This is my footer.</h1>\n            </footer>\n        </div>\n    );}\n\n\nexport const Navigation = () => {\n\n    const userContext = useSelector(state => {\n      return state.userContext;\n    });\n  \n    let dispatch = useDispatch();\n    let history = useHistory();\n  \n    const logOut = () => {\n      dispatch({ type: Constants.LOGOUT_REQUEST });\n    }\n  \n    let login = () => {\n      history.push('/login');\n    }\n  \n    let register = () => {\n      history.push('/register');\n    }\n  \n    return (\n      <>\n        <h3>hello {userContext.user && <><span>{userContext.user.username}</span></>}</h3>\n        {userContext.isAuthenticated && <button onClick={logOut}>Log Out</button>}\n        {!userContext.isAuthenticated &&\n          <>\n            <button onClick={login}>Login</button> <br />\n            <button onClick={register}>Register</button>\n          </>\n        }\n      </>\n    );\n  }\n  ",{"ruleId":"124","severity":1,"message":"125","line":5,"column":13,"nodeType":"126","messageId":"127","endLine":5,"endColumn":26},{"ruleId":"124","severity":1,"message":"128","line":9,"column":8,"nodeType":"126","messageId":"127","endLine":9,"endColumn":15},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"124","severity":1,"message":"135","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"136","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"137","line":4,"column":23,"nodeType":"126","messageId":"127","endLine":4,"endColumn":34},{"ruleId":"124","severity":1,"message":"138","line":14,"column":9,"nodeType":"126","messageId":"127","endLine":14,"endColumn":20},{"ruleId":"124","severity":1,"message":"135","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"136","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"139","line":2,"column":27,"nodeType":"126","messageId":"127","endLine":2,"endColumn":33},{"ruleId":"124","severity":1,"message":"140","line":2,"column":35,"nodeType":"126","messageId":"127","endLine":2,"endColumn":41},{"ruleId":"124","severity":1,"message":"141","line":2,"column":43,"nodeType":"126","messageId":"127","endLine":2,"endColumn":48},{"ruleId":"124","severity":1,"message":"142","line":2,"column":50,"nodeType":"126","messageId":"127","endLine":2,"endColumn":54},{"ruleId":"124","severity":1,"message":"143","line":2,"column":66,"nodeType":"126","messageId":"127","endLine":2,"endColumn":79},{"ruleId":"124","severity":1,"message":"144","line":2,"column":81,"nodeType":"126","messageId":"127","endLine":2,"endColumn":90},{"ruleId":"124","severity":1,"message":"145","line":10,"column":37,"nodeType":"126","messageId":"127","endLine":10,"endColumn":42},{"ruleId":"124","severity":1,"message":"139","line":3,"column":27,"nodeType":"126","messageId":"127","endLine":3,"endColumn":33},{"ruleId":"124","severity":1,"message":"145","line":12,"column":35,"nodeType":"126","messageId":"127","endLine":12,"endColumn":40},{"ruleId":"124","severity":1,"message":"145","line":70,"column":35,"nodeType":"126","messageId":"127","endLine":70,"endColumn":40},{"ruleId":"146","severity":1,"message":"147","line":97,"column":6,"nodeType":"148","endLine":97,"endColumn":10,"suggestions":"149"},{"ruleId":"124","severity":1,"message":"150","line":139,"column":11,"nodeType":"126","messageId":"127","endLine":139,"endColumn":19},{"ruleId":"124","severity":1,"message":"145","line":139,"column":35,"nodeType":"126","messageId":"127","endLine":139,"endColumn":40},{"ruleId":"124","severity":1,"message":"151","line":139,"column":42,"nodeType":"126","messageId":"127","endLine":139,"endColumn":48},{"ruleId":"146","severity":1,"message":"147","line":150,"column":6,"nodeType":"148","endLine":150,"endColumn":10,"suggestions":"152"},{"ruleId":"146","severity":1,"message":"153","line":209,"column":6,"nodeType":"148","endLine":209,"endColumn":8,"suggestions":"154"},{"ruleId":"124","severity":1,"message":"145","line":248,"column":35,"nodeType":"126","messageId":"127","endLine":248,"endColumn":40},{"ruleId":"124","severity":1,"message":"151","line":248,"column":42,"nodeType":"126","messageId":"127","endLine":248,"endColumn":48},{"ruleId":"146","severity":1,"message":"153","line":302,"column":6,"nodeType":"148","endLine":302,"endColumn":8,"suggestions":"155"},{"ruleId":"146","severity":1,"message":"147","line":345,"column":6,"nodeType":"148","endLine":345,"endColumn":8,"suggestions":"156"},{"ruleId":"124","severity":1,"message":"135","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"136","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"139","line":2,"column":27,"nodeType":"126","messageId":"127","endLine":2,"endColumn":33},{"ruleId":"124","severity":1,"message":"140","line":2,"column":35,"nodeType":"126","messageId":"127","endLine":2,"endColumn":41},{"ruleId":"124","severity":1,"message":"141","line":2,"column":43,"nodeType":"126","messageId":"127","endLine":2,"endColumn":48},{"ruleId":"124","severity":1,"message":"142","line":2,"column":50,"nodeType":"126","messageId":"127","endLine":2,"endColumn":54},{"ruleId":"124","severity":1,"message":"143","line":2,"column":66,"nodeType":"126","messageId":"127","endLine":2,"endColumn":79},{"ruleId":"124","severity":1,"message":"144","line":2,"column":81,"nodeType":"126","messageId":"127","endLine":2,"endColumn":90},{"ruleId":"124","severity":1,"message":"145","line":10,"column":37,"nodeType":"126","messageId":"127","endLine":10,"endColumn":42},{"ruleId":"157","severity":1,"message":"158","line":19,"column":27,"nodeType":"159","messageId":"160","endLine":19,"endColumn":29},{"ruleId":"124","severity":1,"message":"139","line":2,"column":27,"nodeType":"126","messageId":"127","endLine":2,"endColumn":33},{"ruleId":"124","severity":1,"message":"140","line":2,"column":35,"nodeType":"126","messageId":"127","endLine":2,"endColumn":41},{"ruleId":"124","severity":1,"message":"142","line":2,"column":50,"nodeType":"126","messageId":"127","endLine":2,"endColumn":54},{"ruleId":"124","severity":1,"message":"143","line":2,"column":66,"nodeType":"126","messageId":"127","endLine":2,"endColumn":79},{"ruleId":"124","severity":1,"message":"144","line":2,"column":81,"nodeType":"126","messageId":"127","endLine":2,"endColumn":90},{"ruleId":"124","severity":1,"message":"161","line":2,"column":92,"nodeType":"126","messageId":"127","endLine":2,"endColumn":102},{"ruleId":"124","severity":1,"message":"137","line":3,"column":23,"nodeType":"126","messageId":"127","endLine":3,"endColumn":34},{"ruleId":"129","replacedBy":"162"},{"ruleId":"131","replacedBy":"163"},{"ruleId":"133","replacedBy":"164"},{"ruleId":"124","severity":1,"message":"135","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"136","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},"no-unused-vars","'serviceWorker' is defined but never used.","Identifier","unusedVar","'promise' is defined but never used.","no-native-reassign",["165"],"no-negated-in-lhs",["166"],"jsx-a11y/accessible-emoji",[],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'userContext' is assigned a value but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","'watch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["167"],"'register' is assigned a value but never used.","'errors' is assigned a value but never used.",["168"],"React Hook useEffect has missing dependencies: 'fetchData' and 'id'. Either include them or remove the dependency array.",["169"],["170"],["171"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useHistory' is defined but never used.",["165"],["166"],[],"no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"172","fix":"174"},{"desc":"172","fix":"175"},{"desc":"172","fix":"176"},{"desc":"177","fix":"178"},"Update the dependencies array to be: [fetchData, id]",{"range":"179","text":"180"},{"range":"181","text":"180"},{"range":"182","text":"180"},{"range":"183","text":"180"},"Update the dependencies array to be: [fetchData]",{"range":"184","text":"185"},[3108,3112],"[fetchData, id]",[5003,5007],[6582,6584],[8745,8747],[10061,10063],"[fetchData]"]