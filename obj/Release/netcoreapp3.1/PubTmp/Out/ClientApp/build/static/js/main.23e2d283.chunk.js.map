{"version":3,"sources":["components/Posts.js","constants/index.js","components/Login.js","components/Register.js","layouts/MasterPage.js","layouts/PublicMasterPage.js","layouts/Routing.js","App.js","serviceWorker.js","reducers/postsReducer.js","reducers/userReducer.js","reducers/index.js","sagas/api.js","sagas/sagas.js","index.js"],"names":["Home","PostCreate","history","useHistory","dispatch","useDispatch","useForm","register","handleSubmit","errors","watch","useState","location","setLocation","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","console","error","onSubmit","data","type","payload","push","saveData","lat","toString","long","className","placeholder","name","ref","required","title","maxLength","PostEdit","props","id","useParams","useEffect","fetchData","post","useSelector","state","posts","selectedPost","updateData","defaultValue","emText","articleText","imgUrl","PostDelete","src","style","height","width","alt","value","PostSummary","align","to","Comments","comments","selectedComments","length","map","comment","date","d","Date","toDateString","key","body","CommentCreate","postId","goBack","PostDetail","match","useRouteMatch","href","readMoreUrl","url","path","component","Posts","postList","p","Constants","Login","userContext","isAuthenticated","pathname","submitData","htmlFor","username","password","Register","setError","shouldRedirect","isRegistered","log","role","message","data-dismiss","aria-label","aria-hidden","confirmpassword","email","phone","MasterPage","children","Navigation","user","onClick","PublicMasterPage","PrivateRoute","Component","rest","render","from","PublicRoute","App","Boolean","window","hostname","initialState","notificationText","token","rootReducer","combineReducers","action","localStorage","setItem","JSON","stringify","userInfo","jwtToken","removeItem","status","localStorageData","getItem","parse","BaseUrl","axios","interceptors","request","use","config","headers","Authorization","response","Promise","reject","getPosts","defaults","get","createPost","editPost","put","deletePost","delete","getPostDetail","createComment","getComments","login","addPost","watchAddPost","watchEditPost","watchDeletePost","fetchPosts","watchFetchPosts","fetchPostDetail","watchFetchPostDetail","addComment","watchAddComment","fetchComments","watchFetchComments","watchLogin","watchRegister","rootSaga","call","api","output","takeEvery","all","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","sagas","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.23e2d283.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n//import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link, useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport const Home = () => { return (<h2>Hello. You are in Home</h2>) };\n\nexport const PostCreate = () => {\n  let history = useHistory();\n  let dispatch = useDispatch();\n  const { register, handleSubmit, watch, errors } = useForm();\n\n  const [location, setLocation] = useState({});\n\n  function success(position) {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n    //location = { latitude, longitude };  \n    setLocation({ latitude, longitude });\n  }\n\n  function error() {\n    console.error('Unable to retrieve your location');\n  }\n\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(success, error);\n  }\n\n  let saveData = (data) => {\n    dispatch({\n      type: \"ADD_POST\", payload: data\n    })\n\n    history.push('/posts');\n  }\n\n  const onSubmit = data => {\n    let payload = { ...data, lat: location.latitude.toString(), long: location.longitude.toString() };\n    saveData(payload);\n  };\n\n  return (\n    <>\n      <h2>Create new Post</h2>\n      <h4>Location: {location.latitude}, {location.longitude}</h4>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-group input-group\">\n          <input type=\"text\" placeholder=\"Title\" name=\"title\" ref={register({ required: true })} className=\"form-control\" />\n          <span>{errors.title && 'Title is required'}</span>\n        </div>\n        <div className=\"form-group input-group\">\n          <input type=\"text\" placeholder=\"Summary\" name=\"emText\" ref={register({ required: true, maxLength: 100 })} className=\"form-control\" />\n        </div>\n        <div className=\"form-group input-group\">\n          <textarea name=\"articleText\" ref={register({ required: true })} className=\"form-control\" />\n        </div>\n        <div className=\"form-group input-group\">\n          <input type=\"url\" placeholder=\"Image URL\" name=\"imgUrl\" ref={register({ required: true })} className=\"form-control\" />\n        </div>\n        <input type=\"submit\" className=\"btn btn-primary btn-block\" />\n      </form>\n    </>\n  )\n};\n\nexport const PostEdit = (props) => {\n  let history = useHistory();\n  const { register, handleSubmit, watch, errors } = useForm();\n  let { id } = useParams();\n  let dispatch = useDispatch();\n\n  const [location, setLocation] = useState({});\n\n  function success(position) {\n    const latitude = position.coords.latitude;\n    const longitude = position.coords.longitude;\n    //location = { latitude, longitude };  \n    setLocation({ latitude, longitude });\n  }\n\n  function error() {\n    console.error('Unable to retrieve your location');\n  }\n\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(success, error);\n  }\n\n  let fetchData = (id) => {\n    dispatch({ type: \"FETCH_POST_DETAIL\", payload: id });\n  }\n\n  useEffect(() => {\n    fetchData(id);\n  }, [id])\n\n  const post = useSelector(state => {\n    return state.posts.selectedPost;\n  });\n\n  let updateData = (data) => {\n    const payload = { ...data, id, lat: location.latitude.toString(), long: location.longitude.toString() };\n    dispatch({ type: \"EDIT_POST\", payload: payload });\n    history.push('/posts');\n  }\n\n  const onSubmit = data => {\n    updateData(data);\n  };\n\n  return (\n    <>\n      <h2>Update new Post</h2>\n      <h4>Location: {location.latitude}, {location.longitude}</h4>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"form-group input-group\">\n          <input type=\"text\" placeholder=\"Title\" name=\"title\" defaultValue={post.title} ref={register({ required: true })} className=\"form-control\" />\n          <span>{errors.title && 'Title is required'}</span>\n        </div>\n        <div className=\"form-group input-group\">\n          <input type=\"text\" placeholder=\"Summary\" name=\"emText\" defaultValue={post.emText} ref={register({ required: true, maxLength: 100 })} className=\"form-control\" />\n        </div>\n        <div className=\"form-group input-group\">\n          <textarea name=\"articleText\" defaultValue={post.articleText} ref={register({ required: true })} className=\"form-control\" />\n        </div>\n        <div className=\"form-group input-group\">\n          <input type=\"url\" placeholder=\"Image URL\" name=\"imgUrl\" defaultValue={post.imgUrl} ref={register({ required: true })} className=\"form-control\" />\n        </div>\n\n        <input type=\"submit\" className=\"btn btn-primary btn-block\" />\n      </form>\n    </>\n  )\n};\n\nexport const PostDelete = (props) => {\n  const { register, handleSubmit, watch, errors } = useForm();\n  let { id } = useParams();\n  let history = useHistory();\n  let dispatch = useDispatch();\n\n  let fetchData = (id) => {\n    dispatch({ type: \"FETCH_POST_DETAIL\", payload: id });\n  }\n\n  useEffect(() => {\n    fetchData(id);\n  }, [id])\n\n  const post = useSelector(state => {\n    return state.posts.selectedPost;\n  });\n\n\n  let deleteData = () => {\n    dispatch({ type: \"DELETE_POST\", payload: id });\n    history.push('/posts');\n  }\n\n  const onSubmit = data => {\n    deleteData();\n  };\n\n  return (\n    <>\n      <h2>Delete Post</h2>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h2>{post.title}</h2>\n        <img src={post.imgUrl} style={{ height: \"50px\", width: \"50px\" }} alt=\"post img\" className=\"pull-left thumb margin10 img-thumbnail\"></img>\n        <article><p>{post.articleText}</p></article>\n        <input type=\"submit\" className=\"btn btn-primary btn-block\" value=\"Delete\" />\n      </form>\n    </>\n  )\n};\n\nexport const PostSummary = (post) => {\n  return (\n    <div align=\"left\" className=\"col-md-10 blogShort\" id={post.id}>\n      <h3>{post.title}</h3>\n      <img src={post.imgUrl} style={{ height: \"50px\", width: \"50px\" }} alt=\"post img\" className=\"pull-left thumb margin10 img-thumbnail\"></img>\n      <p>{post.emText}</p>\n      <Link to={location => `/post-detail/${post.id}`}>Detail</Link> &nbsp;\n      <Link to={location => `/post-edit/${post.id}`}>Edit</Link> &nbsp;\n      <Link to={location => `/post-delete/${post.id}`}>Delete</Link> &nbsp;\n    </div>\n  )\n}\n\nexport const Comments = (props) => {\n\n  let { id } = useParams();\n  let dispatch = useDispatch();\n\n  const comments = useSelector(state => {\n    return state.posts.selectedComments;\n  });\n\n  let fetchData = () => {\n    dispatch({\n      type: \"FETCH_COMMENTS\", payload: id,\n    })\n  }\n\n  useEffect(() => {\n    fetchData(id);\n  }, [])\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-12\">Comments count: {comments.length}</div>\n          <div className=\"col-sm-12\">\n            {\n              comments.map(comment => {\n                let date = comment.date;\n                if (date) {\n                  let d = new Date(date.toString());\n                  date = d.toDateString();\n                }\n                else date = 'No Date';\n\n                return (\n                  <>\n                    <div className=\"panel panel-default\" key={comment.id}>\n                      <div className=\"panel-body\">\n                        {comment.body} [{date}]\n                      </div>\n                    </div>\n                  </>\n                );\n              }\n              )\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  )\n};\n\nexport const CommentCreate = () => {\n  let history = useHistory();\n  let dispatch = useDispatch();\n  const { register, handleSubmit, watch, errors } = useForm();\n\n  let { id } = useParams();\n\n  let saveData = (data) => {\n\n    let comment = { body: data.title, date: new Date() };\n\n    dispatch({\n      type: \"ADD_COMMENT\", payload: { postId: id, data: comment }\n    })\n\n    history.goBack();\n  }\n\n\n\n  const onSubmit = data => {\n    saveData(data);\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n\n        <div className=\"col-md-6\">\n          <div className=\"widget-area no-padding blank\">\n            <div className=\"status-upload\">\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <input type=\"text\" placeholder=\"Write your comment here\" name=\"title\" ref={register({ required: true })} className=\"form-control\" />\n                <input type=\"submit\" className=\"btn btn-primary btn-block\" />\n              </form>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    </>\n  )\n};\n\nexport const PostDetail = (props) => {\n\n  let { id } = useParams();\n\n  let dispatch = useDispatch();\n\n  let fetchData = (id) => {\n    dispatch({ type: \"FETCH_POST_DETAIL\", payload: id });\n  }\n\n  useEffect(() => {\n    fetchData(id);\n  }, [])\n\n  const post = useSelector(state => {\n    return state.posts.selectedPost;\n  });\n\n  let match = useRouteMatch();\n\n  return (\n    <>\n      <div align=\"left\" className=\"col-md-10 blogShort\" id={id}>\n        <h2>{post.title}</h2>\n        <img src={post.imgUrl} style={{ height: \"50px\", width: \"50px\" }} alt=\"post img\" className=\"pull-left thumb margin10 img-thumbnail\"></img>\n        <article><p>{post.articleText}</p></article>\n        <a className=\"btn btn-blog pull-right marginBottom10\" href={post.readMoreUrl}>READ MORE</a>\n      </div>\n      <div>\n        <h4>Comments</h4>\n        <Link className=\"btn btn-blog pull-right\" to={`${match.url}/comments`}>Show comments</Link> &nbsp;\n        <Link className=\"btn btn-blog pull-right\" to={`${match.url}/add-comment`}>Add comment</Link>\n        <Switch>\n          <Route path={`${match.path}/comments`} component={Comments}></Route>\n          <Route path={`${match.path}/add-comment`} component={CommentCreate}></Route>\n        </Switch>\n      </div>\n    </>\n  )\n};\n\nexport const Posts = () => {\n  let dispatch = useDispatch();\n\n  const posts = useSelector(state => {\n    return state.posts.postList;\n  });\n\n  let fetchData = () => {\n    dispatch({ type: \"FETCH_POSTS\" });\n    dispatch({ type: \"CLEAR_SELECTION\" });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div id=\"blog\" className=\"row\">\n        {\n          posts.map(p => <PostSummary {...p} key={p.id} />)\n        }\n        <div className=\"col-md-12 gap10\"></div>\n      </div>\n    </div>\n  )\n}","export const Constants = {\n    LOGIN_REQUEST: 'LOGIN_REQUEST',\n    LOGIN_SUCCESS: 'LOGIN_REQUEST_SUCCESS',\n    LOGIN_FAILURE: 'LOGIN_REQUEST_FAILURE',\n    LOGOUT_REQUEST: 'LOGOUT_REQUEST',\n\n    REGISTER_REQUEST: 'REGISTER_REQUEST',\n    REGISTER_SUCCESS: 'REGISTER_REQUEST_SUCCESS',\n    REGISTER_FAILURE: 'REGISTER_REQUEST_FAILURE',\n};","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Constants } from \"../constants\";\n\nexport const Login = () => {\n    let history = useHistory();\n    let dispatch = useDispatch();\n    const { register, handleSubmit, watch, errors } = useForm();\n\n    let submitData = (data) => {\n        dispatch({\n            type: Constants.LOGIN_REQUEST, payload: data\n        })\n        history.push('/');\n    }\n\n    const onSubmit = data => {\n        submitData(data);\n    };\n\n    const userContext = useSelector(state => {\n        return state.userContext;\n    });\n\n    return (userContext.isAuthenticated) ? <Redirect to={{ pathname: '/' }} /> :\n        <>\n            <div className=\"col-md-6 col-md-offset-3\">\n                <h2>Login</h2>\n                <form name=\"form\" onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\">Username</label>\n                        <input type=\"text\" className=\"form-control\" name=\"username\" ref={register({ required: true })} />\n                        <span>{errors.username && 'Username is required'}</span>\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" className=\"form-control\" name=\"password\" ref={register({ required: true })} />\n                        <span>{errors.password && 'Password is required'}</span>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        </>;\n};","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Constants } from \"../constants\";\n\nexport const Register = () => {\n    let history = useHistory();\n    let dispatch = useDispatch();\n    const { register, handleSubmit, watch, errors, setError } = useForm();\n\n    let submitData = (data) => {\n        dispatch({\n            type: Constants.REGISTER_REQUEST, payload: data\n        });\n    }\n\n    const onSubmit = data => {\n        if (data.password != data.confirmpassword) {\n            setError(\"password\", \"notMatch\", \"Password and Confirm Password are mismatched\");\n            return;\n        }\n\n        submitData(data);\n    };\n\n    const userContext = useSelector(state => {\n        return state.userContext;\n    });\n\n    let shouldRedirect = userContext.isAuthenticated || userContext.isRegistered;\n    if (userContext.isRegistered) {\n        history.push('/');\n    }\n\n    if (!userContext.isRegistered && userContext.error) {\n        console.log(userContext.error);\n    }\n\n    return (shouldRedirect) ? <Redirect to={{ pathname: '/' }} /> :\n        <>\n            <div className=\"col-md-6 col-md-offset-3\">\n                <h2>Login</h2>\n                {userContext.error &&\n                    <div className=\"alert alert-danger  alert-dismissible fade show\" role=\"alert\">\n                        {userContext.error.message}\n                        <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                }\n                <form name=\"form\" onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"text\" className=\"form-control\" name=\"email\" ref={register({ required: true })} />\n                        <span>{errors.email && 'Email is required'}</span>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"phone\">Phone</label>\n                        <input type=\"text\" className=\"form-control\" name=\"phone\" ref={register({ required: true })} />\n                        <span>{errors.phone && 'Phone is required'}</span>\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" className=\"form-control\" name=\"password\" ref={register({ required: true })} />\n                        <span>{errors.password && <p>{errors.password.message}</p>}</span>\n                    </div>\n                    <div className='form-group'>\n                        <label htmlFor=\"confirmpassword\">Confirm password</label>\n                        <input type=\"password\" className=\"form-control\" name=\"confirmpassword\" ref={register({ required: true })} />\n                        <span>{errors.confirmpassword && 'Confirm password is required'}</span>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        </>;\n};","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Constants } from \"../constants\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const MasterPage=({ children }) =>{\n    return (\n        <div className=\"flex flex-col items-strech\">\n            <h1>this is header</h1>\n            <Navigation/>\n            <main className=\"w-full bg-blue-300 text-center\">\n                {children}\n            </main>\n            <footer className=\"w-full bg-blue-600 text-center\">\n               <h1> This is my footer.</h1>\n            </footer>\n        </div>\n    );}\n\n\nexport const Navigation = () => {\n\n    const userContext = useSelector(state => {\n      return state.userContext;\n    });\n  \n    let dispatch = useDispatch();\n    let history = useHistory();\n  \n    const logOut = () => {\n      dispatch({ type: Constants.LOGOUT_REQUEST });\n    }\n  \n    let login = () => {\n      history.push('/login');\n    }\n  \n    let register = () => {\n      history.push('/register');\n    }\n  \n    return (\n      <>\n        <h3>hello {userContext.user && <><span>{userContext.user.username}</span></>}</h3>\n        {userContext.isAuthenticated && <button onClick={logOut}>Log Out</button>}\n        {!userContext.isAuthenticated &&\n          <>\n            <button onClick={login}>Login</button> <br />\n            <button onClick={register}>Register</button>\n          </>\n        }\n      </>\n    );\n  }\n  ","import React from 'react'\n\nfunction PublicMasterPage({children}) {\n    return (\n        <div>\n        <h1>Public Master Page Header</h1>\n\n           {children} \n\n        <h1>Public Master Page Footer</h1>\n\n        </div>\n    )\n}\n\nexport default PublicMasterPage\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useRouteMatch, useParams, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { MasterPage } from './MasterPage';\nimport PublicMasterPage from './PublicMasterPage';\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n\n    const userContext = useSelector(state => {\n      return state.userContext;\n    });\n  \n    return (\n      <Route {...rest} render={props => {\n        return (userContext.isAuthenticated)\n          ? <MasterPage><Component {...props} /></MasterPage>\n          : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />;\n      }} />\n    )\n  }\n  \n  \n  export const  PublicRoute=({ component: Component, ...rest })=> {\n    return (\n      <Route {...rest} render={props => {\n        return ( <PublicMasterPage><Component {...props} /></PublicMasterPage>)\n        }}/>\n    )\n  }\n  ","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { PostDetail, PostCreate, PostEdit, PostDelete, Posts, Home } from \"./components/Posts\";\nimport { Login } from \"./components/Login\";\nimport { Register } from \"./components/Register\";\nimport { PrivateRoute,PublicRoute } from \"./layouts/Routing\";\n\n\n\nconst App = () => {\n\n  const userContext = useSelector(state => {\n    return state.userContext;\n  });\n\n  return (\n    <Router>\n     \n              <Switch>\n                <PrivateRoute path=\"/post-detail/:id\" component={PostDetail}></PrivateRoute>\n                <PrivateRoute path=\"/post-create\" component={PostCreate}></PrivateRoute>\n                <PrivateRoute path=\"/post-edit/:id\" component={PostEdit}></PrivateRoute>\n                <PrivateRoute path=\"/post-delete/:id\" component={PostDelete}></PrivateRoute>\n                <PrivateRoute path=\"/posts\" component={Posts}></PrivateRoute>\n                <PublicRoute path=\"/login\" component={Login}></PublicRoute>\n                <PublicRoute path=\"/register\" component={Register}></PublicRoute>\n                <PublicRoute path=\"/\" component={Home}></PublicRoute>\n\n\n              </Switch>\n        \n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n    postList: [],\n    selectedPost: {},\n    selectedComments: [],\n    notificationText: ''\n};\n\nexport default (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case 'ADD_POST_SUCCESS':\n            return {\n                ...state,\n                notificationText: 'Post added successfully'\n            };\n        case 'FETCH_POSTS_SUCCESS':\n            return {\n                ...state,\n                postList: action.payload.data,\n                notificationText: ''\n            };\n        case 'FETCH_POST_DETAIL_SUCCESS':\n            return {\n                ...state,\n                selectedPost: action.payload.data\n            };\n        case 'ADD_COMMENT_SUCCESS':\n            return {\n                ...state,\n                notificationText: 'Comment added successfully'\n            };\n        case 'FETCH_COMMENTS_SUCCESS':\n            if (action.payload.data == null) {\n                action.payload.data = [];\n            }\n\n            return {\n                ...state,\n                selectedComments: action.payload.data,\n                notificationText: ''\n            }\n        case 'CLEAR_SELECTION':\n            return {\n                ...state,\n                selectedPost: initialState.selectedPost,\n                selectedComments: initialState.selectedComments,\n            };\n        default:\n            return state;\n    }\n}","import { Constants } from \"../constants\";\n\nconst initialState = {\n    isAuthenticated: false,\n    user: null,\n    token: null,\n    isRegistered: false,\n    error: null\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case Constants.LOGIN_SUCCESS:\n            const data = action.payload.data;\n            localStorage.setItem('data', JSON.stringify(data));\n            return {\n                ...state,\n                isAuthenticated: true,\n                user: { username: data.userInfo.email },\n                token: data.jwtToken,\n            };\n        case Constants.LOGOUT_REQUEST:\n            localStorage.removeItem('data');\n            return {\n                isAuthenticated: initialState.isAuthenticated,\n                user: initialState.user,\n                token: initialState.token,\n            };\n        case Constants.REGISTER_SUCCESS:\n            console.log('REGISTER_SUCCESS', action.payload);\n            return {\n                ...state,\n                isRegistered: true,\n            };\n        case Constants.REGISTER_FAILURE:\n            const error = action.payload;\n            let message = JSON.stringify(error.data);\n            return {\n                ...state,\n                isRegistered: false,\n                error: { status: error.status, message: message }\n            };\n        default:\n            let localStorageData = localStorage.getItem('data');\n            if (localStorageData) {\n                localStorageData = JSON.parse(localStorageData);\n                return {\n                    ...state,\n                    isAuthenticated: true,\n                    user: { username: localStorageData.userInfo.email },\n                    token: localStorageData.jwtToken,\n                }\n            }\n\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport PostsReducer from \"./postsReducer\";\nimport UserReducer from \"./userReducer\";\n\nconst rootReducer = combineReducers({\n    posts: PostsReducer,\n    userContext: UserReducer,\n});\n\nexport default rootReducer;","import axios from 'axios';\nconst BaseUrl = 'http://localhost:5005/api';\nconst AuthUrl = 'http://localhost:5000';\n\n\naxios.interceptors.request.use(function (config) {\n    let localStorageData = localStorage.getItem('data');\n    if (localStorageData) {\n        localStorageData = JSON.parse(localStorageData);\n        let token = 'Bearer ' + localStorageData.jwtToken;\n        config.headers.Authorization = token;\n    }\n    console.log(config);\n    return config;\n});\n\n\naxios.interceptors.response.use(function (response) {\n    return response;\n}, function (error) {\n    if (error.response.status === 401) {\n        localStorage.removeItem('data');\n        window.location = '/login';\n    } else {       \n        return Promise.reject(error.response);\n    }\n});\n\nexport const getPosts = () => {\n    console.log(\"getPosts api call.\");\n    console.log(axios.defaults);\n    return axios.get(`${BaseUrl}/posts`);\n}\n\nexport const createPost = (data) => {\n    console.log(\"createPost api call ->\", data);\n    return axios.post(`${BaseUrl}/posts`, data);\n}\n\nexport const editPost = (data) => {\n    console.log(\"editPost api call ->\", data);\n    return axios.put(`${BaseUrl}/posts`, data);\n}\n\nexport const deletePost = (id) => {\n    console.log(\"deletePost api call ->\", id);\n    return axios.delete(`${BaseUrl}/posts/${id}`, id);\n}\n\nexport const getPostDetail = (id) => {\n    console.log(\"getPostDetail api call ->\", id);\n    return axios.get(`${BaseUrl}/posts/${id}`);\n}\n\nexport const createComment = ({ postId, data }) => {\n    console.log(\"createComment api call ->\", postId, data);\n    return axios.post(`${BaseUrl}/comments?postId=${postId}`, data);\n}\n\nexport const getComments = (postId) => {\n    console.log(\"getComments api call ->\", postId);\n    return axios.get(`${BaseUrl}/comments?postId=${postId}`);\n}\n\n\nexport const login = (data) => {\n    console.log(\"login api call ->\", data);\n    return axios.post(`${AuthUrl}/jwt/authenticate`, data);\n}\n\nexport const register = (data) => {\n    console.log(\"register api call ->\", data);\n    return axios.post(`${AuthUrl}/api/user/register`, data);\n}","import { call, put, takeEvery, all } from \"redux-saga/effects\";\nimport * as api from './api';\nimport { Constants } from \"../constants\";\n\nexport function* addPost({ payload }) {\n    try {\n        let output = yield call(api.createPost, payload);\n        yield put({ type: 'ADD_POST_SUCCESS', payload: output });\n        yield put({ type: 'FETCH_POSTS' });\n    } catch (error) {\n        console.log('addPost error', error);\n    }\n}\n\nfunction* watchAddPost() {\n    yield takeEvery('ADD_POST', addPost);\n}\n\nexport function* editPost({ payload }) {\n    try {\n        let output = yield call(api.editPost, payload);\n        yield put({ type: 'EDIT_POST_SUCCESS', payload: output });\n        yield put({ type: 'FETCH_POSTS' });\n    } catch (error) {\n        console.log('editPost error', error);\n    }\n}\n\nfunction* watchEditPost() {\n    yield takeEvery('EDIT_POST', editPost);\n}\n\nexport function* deletePost({ payload }) {\n    try {\n        let output = yield call(api.deletePost, payload);\n        yield put({ type: 'DELETE_POST_SUCCESS', payload: output });\n        yield put({ type: 'FETCH_POSTS' });\n    } catch (error) {\n        console.log('deletePost error', error);\n    }\n}\n\nfunction* watchDeletePost() {\n    yield takeEvery('DELETE_POST', deletePost);\n}\n\nexport function* fetchPosts() {\n    try {\n        const output = yield call(api.getPosts);\n        yield put({ type: 'FETCH_POSTS_SUCCESS', payload: output });\n    } catch (error) {\n        console.log('fetch posts error', error);\n    }\n}\n\nfunction* watchFetchPosts() {\n    yield takeEvery('FETCH_POSTS', fetchPosts);\n}\n\nexport function* fetchPostDetail({ payload }) {\n    try {\n        const output = yield call(api.getPostDetail, payload);\n        yield put({ type: 'FETCH_POST_DETAIL_SUCCESS', payload: output });\n    } catch (error) {\n        console.log('fetch posts error', error);\n    }\n}\n\nfunction* watchFetchPostDetail() {\n    yield takeEvery('FETCH_POST_DETAIL', fetchPostDetail);\n}\n\nexport function* addComment({ payload }) {\n    try {\n        const output = yield call(api.createComment, payload);\n        yield put({ type: 'ADD_COMMENTS_SUCCESS', payload: output });\n        yield put({ type: 'FETCH_COMMENTS', payload: payload.postId });\n    } catch (error) {\n        console.log('fetch posts error', error);\n    }\n}\n\nfunction* watchAddComment() {\n    yield takeEvery('ADD_COMMENT', addComment);\n}\n\nexport function* fetchComments({ payload }) {\n    try {\n        const output = yield call(api.getComments, payload);\n        yield put({ type: 'FETCH_COMMENTS_SUCCESS', payload: output });\n    } catch (error) {\n        console.log('fetch posts error', error);\n    }\n}\n\nfunction* watchFetchComments() {\n    yield takeEvery('FETCH_COMMENTS', fetchComments);\n}\n\nexport function* login({ payload }) {\n    try {\n        let output = yield call(api.login, payload);\n        yield put({ type: 'LOGIN_REQUEST_SUCCESS', payload: output });\n    } catch (error) {\n        console.log('login error', error);\n    }\n}\n\nfunction* watchLogin() {\n    yield takeEvery('LOGIN_REQUEST', login);\n}\n\nexport function* register({ payload }) {\n    try {\n        let output = yield call(api.register, payload);\n        yield put({ type: Constants.REGISTER_SUCCESS, payload: output });\n    } catch (error) {\n        console.log('register error', error);\n        yield put({ type: Constants.REGISTER_FAILURE, payload: error });\n    }\n}\n\nfunction* watchRegister() {\n    yield takeEvery(Constants.REGISTER_REQUEST, register);\n}\n\n\nexport default function* rootSaga() {\n    yield all([\n        watchAddPost(),\n        watchEditPost(),\n        watchDeletePost(),\n        watchFetchPosts(),\n        watchFetchPostDetail(),\n        watchAddComment(),\n        watchFetchComments(),\n        watchLogin(),\n        watchRegister()\n    ]);\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport promise from \"redux-promise\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport reducers from \"./reducers\";\nimport sagas from \"./sagas/sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducers, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(sagas);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}